{
  "Auth": {
    "loginEndpoint": "/api/Auth/login",
    "credentials": {
      "username": "TestNajung",
      "password": "asker123"
    }
  },
  "Custom Categories": {
    "Admin": {
      "endpoints": [
        "/api/Admin/users",
        "/api/Admin/dashboard",
        "/api/Admin/taskStats",
        "/api/Admin/teamStats"
      ],
      "methods": [
        "GET",
        "GET",
        "GET",
        "GET"
      ],
      "requiresAuth": true,
      "sampleData": [
        null
      ]
    },
    "Auth": {
      "endpoints": [
        "/api/Auth/current-user",
        "/api/Auth/check-preload-status"
      ],
      "methods": [
        "GET",
        "GET"
      ],
      "requiresAuth": true,
      "sampleData": [
        null
      ]
    },
    "CalendarEventEndpoints": {
      "POST": {
        "endpoints": [
          "/api/calendar/events",
          "/api/calendar/events/team"
        ],
        "methods": [
          "POST"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Basic Event",
            "description": "Create a basic calendar event with minimal fields",
            "data": {
              "title": "Test Meeting",
              "description": "This is a test meeting",
              "startDate": "2025-04-01",
              "endDate": "2025-04-01",
              "startTime": "10:00",
              "endTime": "11:00",
              "priority": "Medium",
              "category": "meeting",
              "participants": ["test@example.com"],
              "createdBy": ""
            }
          },
          {
            "name": "Team Event",
            "description": "Create a calendar event for a team",
            "data": {
              "title": "Team Meeting",
              "description": "Weekly team sync-up",
              "startDate": "2025-04-02",
              "endDate": "2025-04-02",
              "startTime": "14:00",
              "endTime": "15:00",
              "priority": "High",
              "category": "meeting",
              "participants": ["test@example.com"],
              "teamId": "",
              "meetingLink": "https://meet.example.com/test",
              "createdBy": ""
            }
          },
          {
            "name": "Multi-day Event",
            "description": "Create a calendar event spanning multiple days",
            "data": {
              "title": "Conference",
              "description": "Annual industry conference",
              "startDate": "2025-04-05",
              "endDate": "2025-04-07",
              "startTime": "09:00",
              "endTime": "17:00",
              "priority": "High",
              "category": "meeting",
              "participants": ["test@example.com"],
              "createdBy": ""
            }
          }
        ]
      },
      "PUT": {
        "endpoints": [
          "/api/calendar/events/{id}"
        ],
        "methods": [
          "PUT"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Update Event",
            "description": "Update an existing calendar event",
            "data": {
              "id": "",
              "title": "Updated Meeting",
              "description": "This meeting has been updated",
              "startDate": "2025-04-10",
              "endDate": "2025-04-10",
              "startTime": "11:00",
              "endTime": "12:00",
              "priority": "High",
              "category": "meeting",
              "participants": ["test@example.com"],
              "createdBy": ""
            }
          }
        ]
      }
    },
    "MessageEndpoints": {
      "GET": {
        "endpoints": [
          "/api/Messages/user/{userId}",
          "/api/Messages/conversation/{userId}/{otherUserId}",
          "/api/Messages/conversations/{userId}"
        ],
        "methods": [
          "GET"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Get User Messages",
            "description": "Retrieve all messages for a specific user with pagination",
            "data": {
              "userId": "67caa8641c34098650859ce4",
              "page": 1,
              "pageSize": 50
            }
          },
          {
            "name": "Get Conversation",
            "description": "Retrieve conversation between two users",
            "data": {
              "userId": "67caa8641c34098650859ce4",
              "otherUserId": "67caa9271a19e9a6a9f42283"
            }
          }
        ]
      },
      "POST": {
        "endpoints": [
          "/api/Messages/send/{senderId}"
        ],
        "methods": [
          "POST"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Basic Message",
            "description": "Send a basic text message with minimal fields",
            "data": {
              "receiverId": "67caa9271a19e9a6a9f42283",
              "content": "This is a test message",
              "subject": "Test Message"
            }
          },
          {
            "name": "Long Message",
            "description": "Send a message with longer content to test performance",
            "data": {
              "receiverId": "67caa9271a19e9a6a9f42283",
              "content": "This is a longer test message with more content to test the performance of the API. It contains multiple sentences and paragraphs to simulate a real-world scenario where users might send detailed messages. The system should handle this efficiently and provide good performance even with larger message content.",
              "subject": "Performance Test Message"
            }
          },
          {
            "name": "Message with Special Characters",
            "description": "Send a message with special characters to test encoding",
            "data": {
              "receiverId": "67caa9271a19e9a6a9f42283",
              "content": "Test message with special characters: !@#$%^&*()_+{}|:<>?~`-=[]\\;',./\"",
              "subject": "Special Characters Test"
            }
          }
        ]
      },
      "PUT": {
        "endpoints": [
          "/api/Messages/read/{id}"
        ],
        "methods": [
          "PUT"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Mark Message as Read",
            "description": "Mark a message as read",
            "data": {}
          }
        ]
      },
      "DELETE": {
        "endpoints": [
          "/api/Messages/{messageId}?userId={userId}"
        ],
        "methods": [
          "DELETE"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Delete Message",
            "description": "Delete a specific message",
            "data": {
              "messageId": "",
              "userId": ""
            }
          }
        ]
      }
    },
    "DynamicQueryTests": {
      "endpoints": [
        "/api/Tasks"
      ],
      "methods": [
        "POST"
      ],
      "requiresAuth": true,
      "parameterSets": [
        {
          "name": "Basic Task",
          "description": "Minimal task with only required fields",
          "data": {
            "id": "",
            "title": "Basic Task",
            "description": "A simple task with minimal fields",
            "status": "pending",
            "priority": "medium",
            "category": "Development",
            "teamId": "67d2c7ed664c5cbba91de412",
            "createdBy": {
              "id": "",
              "username": "",
              "fullName": ""
            }
          }
        },
        {
          "name": "Task with Assigned Users",
          "description": "Task with assigned users to test user assignment load",
          "data": {
            "id": "",
            "title": "Task with Users",
            "description": "Testing task with multiple assigned users",
            "status": "pending",
            "priority": "high",
            "category": "Development",
            "assignedUsers": [
              {
                "id": "67caa8641c34098650859ce4",
                "username": "TestNajung",
                "email": "sabridoga2000@gmail.com",
                "fullName": "Sabri alperen Kaya",
                "department": "Web Developer",
                "title": "Frontend",
                "position": "Junior",
                "profileImage": ""
              }
            ],
            "assignedUserIds": ["67caa8641c34098650859ce4"],
            "teamId": "67d2c7ed664c5cbba91de412",
            "createdBy": {
              "id": "",
              "username": "",
              "fullName": ""
            }
          }
        },
        {
          "name": "Task with SubTasks",
          "description": "Task with multiple subtasks to test subtask processing load",
          "data": {
            "id": "",
            "title": "Task with SubTasks",
            "description": "Testing task with multiple subtasks",
            "status": "pending",
            "priority": "medium",
            "category": "Development",
            "subTasks": [
              {
                "title": "Subtask 1",
                "completed": false,
                "assignedUserId": "67caa8641c34098650859ce4"
              },
              {
                "title": "Subtask 2",
                "completed": false,
                "assignedUserId": "67caa8641c34098650859ce4"
              },
              {
                "title": "Subtask 3",
                "completed": false,
                "assignedUserId": "67caa8641c34098650859ce4"
              }
            ],
            "teamId": "67d2c7ed664c5cbba91de412",
            "createdBy": {
              "id": "",
              "username": "",
              "fullName": ""
            }
          }
        },
        {
          "name": "Task with Dependencies",
          "description": "Task with dependencies to test dependency processing load",
          "data": {
            "id": "",
            "title": "Task with Dependencies",
            "description": "Testing task with dependencies",
            "status": "pending",
            "priority": "high",
            "category": "Development",
            "dependencies": [],
            "teamId": "67d2c7ed664c5cbba91de412",
            "createdBy": {
              "id": "",
              "username": "",
              "fullName": ""
            }
          }
        },
        {
          "name": "Complex Task",
          "description": "Complex task with all possible fields to test maximum load",
          "data": {
            "id": "",
            "title": "Complex Task",
            "description": "A complex task with all possible fields populated",
            "status": "inProgress",
            "priority": "critical",
            "category": "Development",
            "isLocked": false,
            "assignedUsers": [
              {
                "id": "67caa8641c34098650859ce4",
                "username": "TestNajung",
                "email": "sabridoga2000@gmail.com",
                "fullName": "Sabri alperen Kaya",
                "department": "Web Developer",
                "title": "Frontend",
                "position": "Junior",
                "profileImage": ""
              }
            ],
            "assignedUserIds": ["67caa8641c34098650859ce4"],
            "dueDate": "2025-05-15T12:00:00.000Z",
            "subTasks": [
              {
                "title": "Complex Subtask 1",
                "completed": false,
                "assignedUserId": "67caa8641c34098650859ce4"
              },
              {
                "title": "Complex Subtask 2",
                "completed": false,
                "assignedUserId": "67caa8641c34098650859ce4"
              }
            ],
            "dependencies": [],
            "teamId": "67d2c7ed664c5cbba91de412",
            "comments": [],
            "createdBy": {
              "id": "",
              "username": "",
              "fullName": ""
            }
          }
        }
      ]
    },
    "TasksEndpoints": {
      "GET": {
        "endpoints": [
          "/api/Tasks",
          "/api/Tasks/{id}"
        ],
        "methods": [
          "GET"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Get All Tasks",
            "description": "Retrieve all tasks",
            "data": null
          },
          {
            "name": "Get Task By ID",
            "description": "Retrieve a specific task by ID",
            "data": {
              "id": "67d2c7ed664c5cbba91de413"
            }
          }
        ]
      },
      "PUT": {
        "endpoints": [
          "/api/Tasks/{id}"
        ],
        "methods": [
          "PUT"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Basic Task Update",
            "description": "Minimal task update with only required fields",
            "data": {
              "id": "",
              "title": "Updated Basic Task",
              "description": "A simple task with minimal fields updated",
              "status": "inProgress",
              "priority": "medium",
              "category": "Development",
              "teamId": "67d2c7ed664c5cbba91de412",
              "createdBy": {
                "id": "",
                "username": "",
                "fullName": ""
              }
            }
          },
          {
            "name": "Task Update with Assigned Users",
            "description": "Task update with assigned users to test user assignment load",
            "data": {
              "id": "",
              "title": "Updated Task with Users",
              "description": "Testing task update with multiple assigned users",
              "status": "inProgress",
              "priority": "high",
              "category": "Development",
              "assignedUsers": [
                {
                  "id": "67caa8641c34098650859ce4",
                  "username": "TestNajung",
                  "email": "sabridoga2000@gmail.com",
                  "fullName": "Sabri alperen Kaya",
                  "department": "Web Developer",
                  "title": "Frontend",
                  "position": "Junior",
                  "profileImage": ""
                }
              ],
              "assignedUserIds": ["67caa8641c34098650859ce4"],
              "teamId": "67d2c7ed664c5cbba91de412",
              "createdBy": {
                "id": "",
                "username": "",
                "fullName": ""
              }
            }
          },
          {
            "name": "Task Update with SubTasks",
            "description": "Task update with multiple subtasks to test subtask processing load",
            "data": {
              "id": "",
              "title": "Updated Task with SubTasks",
              "description": "Testing task update with multiple subtasks",
              "status": "inProgress",
              "priority": "medium",
              "category": "Development",
              "subTasks": [
                {
                  "title": "Updated Subtask 1",
                  "completed": false,
                  "assignedUserId": "67caa8641c34098650859ce4"
                },
                {
                  "title": "Updated Subtask 2",
                  "completed": false,
                  "assignedUserId": "67caa8641c34098650859ce4"
                },
                {
                  "title": "Updated Subtask 3",
                  "completed": false,
                  "assignedUserId": "67caa8641c34098650859ce4"
                }
              ],
              "teamId": "67d2c7ed664c5cbba91de412",
              "createdBy": {
                "id": "",
                "username": "",
                "fullName": ""
              }
            }
          },
          {
            "name": "Task Update with Dependencies",
            "description": "Task update with dependencies to test dependency processing load",
            "data": {
              "id": "",
              "title": "Updated Task with Dependencies",
              "description": "Testing task update with dependencies",
              "status": "inProgress",
              "priority": "high",
              "category": "Development",
              "dependencies": [],
              "teamId": "67d2c7ed664c5cbba91de412",
              "createdBy": {
                "id": "",
                "username": "",
                "fullName": ""
              }
            }
          },
          {
            "name": "Complex Task Update",
            "description": "Complex task update with all possible fields to test maximum load",
            "data": {
              "id": "",
              "title": "Updated Complex Task",
              "description": "A complex task with all possible fields updated",
              "status": "inProgress",
              "priority": "critical",
              "category": "Development",
              "isLocked": false,
              "assignedUsers": [
                {
                  "id": "67caa8641c34098650859ce4",
                  "username": "TestNajung",
                  "email": "sabridoga2000@gmail.com",
                  "fullName": "Sabri alperen Kaya",
                  "department": "Web Developer",
                  "title": "Frontend",
                  "position": "Junior",
                  "profileImage": ""
                }
              ],
              "assignedUserIds": ["67caa8641c34098650859ce4"],
              "dueDate": "2025-05-15T12:00:00.000Z",
              "subTasks": [
                {
                  "title": "Updated Complex Subtask 1",
                  "completed": false,
                  "assignedUserId": "67caa8641c34098650859ce4"
                },
                {
                  "title": "Updated Complex Subtask 2",
                  "completed": false,
                  "assignedUserId": "67caa8641c34098650859ce4"
                }
              ],
              "dependencies": [],
              "teamId": "67d2c7ed664c5cbba91de412",
              "comments": [],
              "createdBy": {
                "id": "",
                "username": "",
                "fullName": ""
              }
            }
          }
        ]
      },
      "DELETE": {
        "endpoints": [
          "/api/Tasks/{id}"
        ],
        "methods": [
          "DELETE"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Delete Task",
            "description": "Delete an existing task",
            "data": {
              "id": "67d2c7ed664c5cbba91de413"
            }
          }
        ]
      }
    },
    "Users": {
      "endpoints": [
        "/api/Users",
        "/api/Users/{id}"
      ],
      "methods": [
        "POST",
        "PUT"
      ],
      "requiresAuth": true,
      "sampleData": [
        {
          "username": "yenikullanici",
          "email": "yeni@ornek.com",
          "fullName": "Yeni Kullanıcı",
          "password": "Test123!",
          "departmentId": 1,
          "role": "User"
        },
        {
          "id": 1,
          "email": "guncellenmis@ornek.com",
          "fullName": "Güncellenmiş Kullanıcı",
          "departmentId": 2,
          "role": "Manager"
        }
      ]
    },
    "CommentEndpoints": {
      "POST": {
        "endpoints": [
          "/api/Comment",
          "/api/Comment/user-task-comment",
          "/api/Comment/{commentId}/attachments"
        ],
        "methods": [
          "POST"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Basic Comment",
            "description": "Create a basic comment with minimal fields",
            "data": {
              "taskId": "",
              "userId": "",
              "content": "This is a test comment"
            }
          },
          {
            "name": "Comment with Mentions",
            "description": "Create a comment that mentions other users",
            "data": {
              "taskId": "",
              "userId": "",
              "content": "This is a test comment mentioning @TestUser"
            }
          },
          {
            "name": "Comment with Priority",
            "description": "Create a comment with priority and tags",
            "data": {
              "taskId": "",
              "userId": "",
              "content": "This is a high priority comment",
              "priority": "high",
              "tags": ["important", "urgent"]
            }
          },
          {
            "name": "User Task Comment",
            "description": "Create a comment on a task assigned to the user",
            "data": {
              "taskId": "",
              "content": "This is a comment on my assigned task",
              "priority": "medium",
              "tags": ["progress", "update"],
              "dueDate": "2025-04-15T12:00:00Z"
            }
          },
          {
            "name": "Comment with Attachment",
            "description": "Add an attachment to a comment",
            "data": {
              "commentId": "",
              "fileName": "test-document.pdf",
              "fileUrl": "https://example.com/test-document.pdf",
              "fileSize": 1024,
              "fileType": "application/pdf"
            }
          }
        ]
      },
      "PUT": {
        "endpoints": [
          "/api/Comment/{id}"
        ],
        "methods": [
          "PUT"
        ],
        "requiresAuth": true,
        "parameterSets": [
          {
            "name": "Update Comment Content",
            "description": "Update the content of an existing comment",
            "data": {
              "id": "",
              "content": "This is an updated comment content"
            }
          },
          {
            "name": "Update Comment Priority",
            "description": "Update the priority and tags of an existing comment",
            "data": {
              "id": "",
              "priority": "high",
              "tags": ["updated", "critical"]
            }
          }
        ]
      }
    }
  }
}