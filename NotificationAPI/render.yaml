services:
  # RabbitMQ servisi - önce tanımlıyoruz ki önce başlasın
  - type: pserv
    name: notification-rabbitmq
    env: docker
    plan: starter # İhtiyacınıza göre plan seçebilirsiniz
    dockerfilePath: ./rabbitmq.Dockerfile
    disk:
      name: rabbitmq-data
      mountPath: /var/lib/rabbitmq
      sizeGB: 1
    envVars:
      - key: RABBITMQ_DEFAULT_USER
        value: render_user # Yeni kullanıcı adı
      - key: RABBITMQ_DEFAULT_PASS
        generateValue: true # Render'dan güvenli şifre oluşturmasını isteyin
      
  # Ana NotificationAPI servisi
  - type: web
    name: notification-api
    env: docker
    plan: starter # İhtiyacınıza göre plan seçebilirsiniz (free, starter, vs.)
    dockerfilePath: ./Dockerfile
    dockerContext: .
    numInstances: 1 # Başlangıçta 1 instance, ihtiyaç halinde artırılabilir
    healthCheckPath: /health
    # RabbitMQ servisine bağımlılık ekleyelim, böylece önce RabbitMQ başlayacak
    dependsOn:
      - notification-rabbitmq
    envVars:
      - key: ASPNETCORE_ENVIRONMENT
        value: Production
      - key: MongoDbSettings__ConnectionString
        fromDatabase:
          name: notification-mongodb
          property: connectionString
      - key: MongoDbSettings__DatabaseName
        value: NotificationDb
      - key: RabbitMQ__HostName
        value: notification-rabbitmq # Doğrudan servis adını belirtiyoruz
      - key: RabbitMQ__UserName
        # value: guest # Varsayılan RabbitMQ kullanıcısı - DEĞİŞTİRİLDİ
        value: render_user # Yeni kullanıcı adı
      - key: RabbitMQ__Password
        # value: guest # Varsayılan RabbitMQ şifresi - DEĞİŞTİRİLDİ
        generateValue: true # Render'dan güvenli şifre oluşturmasını isteyin veya value: YOUR_SECURE_PASSWORD kullanın
      - key: RabbitMQ__Port
        value: 5672
      - key: RabbitMQ__NotificationQueueName
        value: notifications
      - key: RabbitMQ__BatchSize
        value: 100
      - key: RabbitMQ__ConcurrentConsumers
        value: 3
      - key: RabbitMQ__RetryEnabled
        value: true
      - key: RabbitMQ__MaxRetryAttempts
        value: 10
      - key: RabbitMQ__RetryWaitInSeconds
        value: 15
      - key: RabbitMQ__AutoRecoveryEnabled
        value: true
  # RabbitMQ servisi
  - type: pserv
    name: notification-rabbitmq
    env: docker
    plan: starter # İhtiyacınıza göre plan seçebilirsiniz
    dockerfilePath: ./rabbitmq.Dockerfile
    disk:
      name: rabbitmq-data
      mountPath: /var/lib/rabbitmq
      sizeGB: 1
    envVars:
      - key: RABBITMQ_DEFAULT_USER
        # value: guest # DEĞİŞTİRİLDİ
        value: render_user # Yeni kullanıcı adı
      - key: RABBITMQ_DEFAULT_PASS
        # value: guest # DEĞİŞTİRİLDİ
        generateValue: true # Render'dan güvenli şifre oluşturmasını isteyin veya value: YOUR_SECURE_PASSWORD kullanın

databases:
  # MongoDB veritabanı
  - name: notification-mongodb
    plan: starter # İhtiyacınıza göre plan seçebilirsiniz
    type: mongodb
    ipAllowList: [] # Tüm IP adreslerine izin ver (veya kısıtla)
